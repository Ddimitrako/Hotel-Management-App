<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>