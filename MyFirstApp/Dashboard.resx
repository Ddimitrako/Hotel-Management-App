<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>